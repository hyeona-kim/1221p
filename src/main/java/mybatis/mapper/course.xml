<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="course">  
	<select id="search" parameterType="Map" resultType="mybatis.vo.CourseVO">
		select * 
		from 
		(select @RN:=@RN+1 as rnum, a.* 
		from (select * from course_t
				<trim prefix="where" suffixOverrides="and">
					<if test="select !=null and select == 1">t_idx =#{value} and</if>
					<if test="select !=null and select == 2">ct_idx =#{value} and</if>
					<if test="select !=null and select == 3">r_idx =#{value} and</if>
					<if test="year !=null">start_date like concat('%',#{year},'%') and</if>
				</trim>
		)a ,(select @RN:=0) b) c 
		where c.rnum between #{begin} and #{end}
	</select>

	<select id="list" parameterType="Map" resultType="mybatis.vo.CourseVO">
		select * from (select @RN:=@RN+1 as rnum, a.* from(select * from course_t order by c_idx )a , 
			(select @RN:=0) b) c where c.rnum between #{begin} and #{end}
	</select>

	<insert id="add" parameterType="Map">
			INSERT INTO course_t(c_name,start_date,end_date,course_fee,c_peo_num, c_round_num)
			values(#{c_name}, #{start_date}, #{end_date}, #{course_fee}, #{c_peo_num}, #{c_round_num})
	</insert>

  <select id="getCourse" parameterType="String" resultType="mybatis.vo.CourseVO">
    SELECT * FROM course_t WHERE c_idx = #{c_idx}
  </select>
  
	<!--  과정삭제 status값을 1로 변경 -->
	<update id="del" parameterType="String">
			update course_t
			set c_status = 1
			where c_idx = #{c_idx}
	</update>
	
	<update id="edit" parameterType="map">
		update course_t
		<trim prefix="SET" suffixOverrides=","> 
        c_name = #{c_name},
        start_date = #{start_date},
        end_date = #{end_date},
        course_fee = #{course_fee},
        c_peo_num = #{c_peo_num},
        c_round_num = #{c_round_num}
 		 </trim>
			where c_idx = #{c_idx}
  	</update>
	
	<select id="count" resultType="int" >
		select count(*) from course_t 
	</select>
	
	<select id="search_count" parameterType="Map" resultType="int">
		select count(*)
		from 
		(select @RN:=@RN+1 as rnum, a.* 
		from (select * from course_t
				<trim prefix="where" suffixOverrides="and">
					<if test="select !=null and select == 1">t_idx =#{value} and</if>
					<if test="select !=null and select == 2">ct_idx =#{value} and</if>
					<if test="select !=null and select == 3">r_idx =#{value} and</if>
					<if test="year !=null">start_date like concat('%',#{year},'%') and</if>
				</trim>
		)a ,(select @RN:=0) b) c 
	</select>
</mapper>